module recType (F : ★ ➔ ★).

import cast.

Mono ◂ ★ = ∀ X: ★. ∀ Y: ★. Cast ·X ·Y ➔ Cast ·(F ·X) ·(F ·Y).

Rec ◂ ★ = ∀ X: ★. Cast ·(F ·X) ·X ➾ X.

recCast ◂ ∀ X: ★. Cast ·(F ·X) ·X ➾ Cast ·Rec ·X
= Λ X. Λ c. intrCast -(λ x. x -c) -(λ _. β) .

recCast' ◂ ∀ Y: ★. (∀ X: ★. Cast ·(F ·X) ·X ➾ Cast ·Y ·X) ➾ Cast ·Y ·Rec
= Λ Y. Λ u. intrCast -(λ y. Λ X. Λ c. elimCast -(u -c) y) -λ _. β .

recRoll ◂ Mono ➾ Cast ·(F ·Rec) ·Rec
= Λ mono.
  recCast' ·(F ·Rec)
    -Λ X. Λ c. castTrans ·(F ·Rec) ·(F ·X) ·X -(mono (recCast -c)) -c .

recUnroll ◂ Mono ➾ Cast ·Rec ·(F ·Rec)
= Λ mono. recCast -(mono (recRoll -mono)).

_ ◂ { recRoll   ≃ λ x. x } = β.
_ ◂ { recUnroll ≃ λ x. x } = β.
recIso1 ◂ { λ a. recRoll (recUnroll a) ≃ λ a. a} = β.
recIso2 ◂ { λ a. recUnroll (recRoll a) ≃ λ a. a} = β.
