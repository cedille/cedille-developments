module recType (F : ★ ➔ ★) .

import cast .
import mono .

Rec ◂ ★ = ∀ X: ★. Cast ·(F ·X) ·X ➾ X.

recLB ◂ ∀ X: ★. Cast ·(F ·X) ·X ➾ Cast ·Rec ·X
= Λ X. Λ c. intrCast -(λ x. x -c) -(λ _. β) .

recGLB ◂ ∀ Y: ★. (∀ X: ★. Cast ·(F ·X) ·X ➾ Cast ·Y ·X) ➾ Cast ·Y ·Rec
= Λ Y. Λ u. intrCast -(λ y. Λ X. Λ c. elimCast -(u -c) y) -λ _. β .

recRoll ◂ Mono ·F ➾ Cast ·(F ·Rec) ·Rec
= Λ mono.
  recGLB ·(F ·Rec)
    -Λ X. Λ c. castTrans ·(F ·Rec) ·(F ·X) ·X -(mono (recLB -c)) -c .

recUnroll ◂ Mono ·F ➾ Cast ·Rec ·(F ·Rec)
= Λ mono. recLB -(mono (recRoll -mono)).

roll ◂ Mono ·F ➾ F ·Rec ➔ Rec
= Λ m. elimCast -(recRoll -m) .

unroll ◂ Mono ·F ➾ Rec ➔ F ·Rec
= Λ m. elimCast -(recUnroll -m) .

_ ◂ { roll   ≃ λ x. x } = β.
_ ◂ { unroll ≃ λ x. x } = β.
recIso1 ◂ { λ a. roll (unroll a) ≃ λ a. a} = β.
recIso2 ◂ { λ a. unroll (roll a) ≃ λ a. a} = β.
