module Sigma .

cSigma ◂ Π A : ★ . (A ➔ ★) ➔ ★ =
  λ A : ★ . λ B : A ➔ ★ .
    ∀ X : ★ . (Π a : A . B a ➔ X) ➔ X .

mkcsigma ◂ ∀ X : ★ . ∀ Y : X ➔ ★ . Π x : X . Y x ➔ cSigma · X · Y =
 Λ X . Λ Y . λ x . λ y . Λ Z . λ c . c x y .

param-Sigma ◂ Π A : ★ . Π P : A ➔ ★ . cSigma · A · P ➔ ★ =
  λ A : ★ . λ P : A ➔ ★ . λ x : cSigma · A · P .
    ∀ X : ★ . ∀ Q : X ➔ ★ . ∀ pr : Π a : A . P a ➔ X . 
      (Π a : A . Π b : P a . Q (pr a b)) ➔ Q (x · X pr).


Sigma ◂ Π A : ★ . (A ➔ ★) ➔ ★ =
  λ A : ★ . λ PA : A ➔ ★ . 
    ι d : cSigma · A · PA .
    ι _ : {d mkcsigma ≃ d} . param-Sigma · A · PA d .

mksigma ◂ ∀ X: ★. ∀ Y: X ➔ ★. Π x: X. Y x ➔ Sigma ·X ·Y =
 Λ X . Λ Y . λ x . λ y . [ mkcsigma · X · Y x y , [ β{mkcsigma x y}  , Λ X' . Λ Q . Λ pr . λ e . e x y  ] ] .


ind-sigma ◂ ∀ A : ★ . ∀ B : A ➔ ★ . Π x : Sigma · A · B .
 ∀ P : Sigma · A · B ➔ ★ . (Π a : A . Π b : B a . P (mksigma · A · B a b)) ➔ P x
  = Λ A . Λ B . λ x . Λ P . λ p . ρ ς x.2.1 - (x.2.2 · (Sigma · A · B) · P -(mksigma · A · B) p) .

rec-sigma ◂ ∀ A: ★. ∀ B: A ➔ ★. Sigma ·A ·B ➔
 ∀ X: ★. (Π a: A. B a ➔ X) ➔ X
= Λ A. Λ B. λ p. Λ X. λ f. ind-sigma p ·(λ _: Sigma ·A ·B. X)
  (λ a. λ b. f a b).

eta-sigma ◂ ∀ A: ★. ∀ B: A ➔ ★. Π p: Sigma ·A ·B. {rec-sigma p (λ a. λ b. mksigma a b) ≃ p}
= Λ A. Λ B. λ p. θ<p> (ind-sigma p) (λ a. λ b. β).

proj1 ◂ ∀ A: ★. ∀ B: A ➔ ★. Sigma ·A ·B  ➔ A = Λ A. Λ B. λ s. s.1 ·A (λ a. λ b. a).

proj2 ◂ ∀ A : ★. ∀ B: A ➔ ★. Π s: Sigma ·A ·B. B (proj1 s) =
  Λ A. Λ B. λ s. ind-sigma s ·(λ s: Sigma ·A ·B. B (proj1 s)) (λ a. λ b. b).


-- helpers for non-dependent Sigma
Pair ◂ ★ ➔ ★ ➔ ★ = λ A: ★. λ B: ★. Sigma ·A ·(λ _: A. B).

mkpair ◂ ∀ A: ★. ∀ B: ★. A ➔ B ➔ Pair ·A ·B
  = Λ A. Λ B. λ a. λ b. mksigma a b.

fst ◂ ∀ A: ★. ∀ B: ★. Pair ·A ·B ➔ A
  = Λ A. Λ B. λ p. proj1 p.

snd ◂ ∀ A: ★. ∀ B: ★. Pair ·A ·B ➔ B
  = Λ A. Λ B. λ p. proj2 p.

ind-pair ◂ ∀ A: ★. ∀ B: ★. Π x: Pair ·A ·B.
    ∀ P: Pair ·A ·B ➔ ★. (Π a: A. Π b: B. P (mkpair a b)) ➔ P x
  = Λ A. Λ B. λ x. Λ P. λ prf. θ<x> (ind-sigma x) prf.

rec-pair : ∀ A: ★. ∀ B: ★. Pair ·A ·B ➔ ∀ X: ★. (A ➔ B ➔ X) ➔ X
  = Λ A. Λ B. λ x. Λ X. λ alg. ind-pair x ·(λ _: Pair ·A ·B. X) alg.

import cast.

MonoPair1 ◂ ∀ A1: ★. ∀ A2: ★. ∀ B: ★.
  Cast ·A1 ·A2 ➔ Cast ·(Pair ·A1 ·B) ·(Pair ·A2 ·B)
= Λ A1. Λ A2. Λ b. λ c.
  caste -(λ p. rec-pair p (λ a. λ b. mkpair (cast -c a) b))
        -(λ p. θ<p> (ind-pair p) (λ a. λ b. β)).

MonoSigma2 ◂ ∀ A: ★. ∀ B1: A ➔ ★. ∀ B2: A ➔ ★.
  ∀ c: (Π a: A. Cast ·(B1 a) ·(B2 a)).
  Cast ·(Sigma ·A ·B1) ·(Sigma ·A ·B2)
= Λ A. Λ B1. Λ B2. Λ c.
  caste -(λ p. ind-sigma p ·(λ x: Sigma ·A ·B1. Sigma ·A ·B2) (λ a. λ b. mksigma a (cast -(c a) b)))
        -(λ p. θ<p> (ind-sigma p) (λ a. λ b. β)).
