module RecType (F : ★ ➔ ★).

import cast.

Mono ◂ ★ = ∀ X: ★. ∀ Y: ★. Cast ·X ·Y ➔ Cast ·(F ·X) ·(F ·Y).

Rec ◂ ★ = ∀ X: ★. Cast ·(F ·X) ·X ➾ X.

recCast ◂ ∀ X: ★. Cast ·(F ·X) ·X ➾ Cast ·Rec ·X =
  Λ X. Λ c. [ λ d. d -c , β ].

recRoll ◂ Mono ➾ Cast ·(F ·Rec) ·Rec =
  Λ mono. [ λ x. Λ X. Λ c. elimCast -(castTrans -(mono (recCast -c)) -c) x , β ].

recUnroll ◂ Mono ➾ Cast ·Rec ·(F ·Rec) =
  Λ mono. [λ x. x -(mono (recRoll -mono)) , β ].

recRollId   ◂ { recRoll   ≃ λ x. x } = β.
recUnrollId ◂ { recUnroll ≃ λ x. x } = β.
recIso1 ◂ { λ a. recRoll (recUnroll a) ≃ λ a. a} = β.
recIso2 ◂ { λ a. recUnroll (recRoll a) ≃ λ a. a} = β.
