module RecType(F : ★ ➔ ★).

import cast.

Mono ◂ ★ =
  ∀ X : ★ . ∀ Y : ★ . Cast · X · Y ➔ Cast · (F · X) · (F · Y) .

Rec ◂ ★ = ∀ X : ★ . Cast · (F · X) · X ➾ X . 

recCast ◂ ∀ X : ★ . Cast · (F · X) · X ➾ Cast · Rec · X =
  Λ X . Λ c . [ λ d . d · X -c , β ].

recFold ◂ Mono ➾ Cast · (F · Rec) · Rec =
  Λ mono . 
    [ λ x . Λ X . Λ c .
      cast -c (cast -(mono (recCast -c)) x),
      β ].

recUnfold ◂ Mono ➾ Cast · Rec · (F · Rec) =
  Λ mono . [λ x . x -(mono (recFold -mono)) , β ].

recIso1 ◂ { λ a . recFold (recUnfold a) ≃ λ a . a} = β.
recIso2 ◂ { λ a . recUnfold (recFold a) ≃ λ a . a} = β.
