module pair.

data Pair (A: ★) (B: ★) : ★ =
  | pair : A ➔ B ➔ Pair.

fst : ∀ A: ★. ∀ B: ★. Pair·A·B ➔ A
= Λ A. Λ B. λ p. μ' p {
  | pair a b ➔ a
  }.

snd : ∀ A: ★. ∀ B: ★. Pair·A·B ➔ B
= Λ A. Λ B. λ p. μ' p {
  | pair a b ➔ b
  }.

data Sigma (A: ★) (B: A ➔ ★) : ★ =
  | sigma : Π a: A. B a ➔ Sigma.

proj1 : ∀ A: ★. ∀ B: A ➔ ★. Sigma·A·B ➔ A
= Λ A. Λ B. λ p. μ' p {
  | sigma a b ➔ a
  }.

proj2 : ∀ A: ★. ∀ B: A ➔ ★. Π s: Sigma·A·B. B (proj1 s)
= Λ A. Λ B. λ p. μ' p @ (λ s: Sigma·A·B. B (proj1 s)) {
  | sigma a b ➔ b
  }.
