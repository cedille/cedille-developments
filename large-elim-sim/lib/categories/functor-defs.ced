import ../stdcore.
import functor.

module functor-defs (F: ★ ➔ ★) (fu: Functor ·F).

import rawfunctor-defs as raw ·F (cast -(f2raw ·F) fu).

fmap = raw.fmap.

fmapId : FmapId ·F fmap
= σ fu {
  | mkFunctor fmap -id -_ ➔
    Λ X. Λ Y. λ c. λ pf. λ xs. ρ (id c pf xs) - β
  }.

fmapComp : FmapComp ·F fmap
= σ fu {
  | mkFunctor fmap -_ -comp ➔
    Λ X. Λ Y. Λ Z. λ g. λ f. λ xs. ρ (comp g f xs) - β
  }.

fcastMap : CastMap ·F
= Λ X. Λ Y. Λ c.
  intrCast
    -(λ xs. fmap c.1 xs)
    -(λ xs. (ρ (fmapId c.1 (λ x. ρ c.2 - β) xs) - β)).

fcast
: ∀ X: ★. ∀ Y: ★. Cast ·X ·Y ➾ F ·X ➔ F ·Y
= Λ X. Λ Y. Λ c. (fcastMap -c).1.
