import ../../lib/lib.

module sint .

SIntPack : Label ➔ Top ➔ ★ ➔ ★
= λ l: Label. λ t: Top. λ R: ★.
  Tuple4
    ·({l ≃ lzero} ➔ View ·Unit t)
    ·({l ≃ lsucc} ➔ View ·R t)
    ·({l ≃ lpred} ➔ View ·R t)
    ·({lt lpred l ≃ tt} ➔ False) .

monoSIntPack : Π l: Label. Π t: Top. Monotonic ·(SIntPack l t)
= λ l. λ t. Λ R1. Λ R2. λ c.
  intrCastI
    λ x. σ x {
    | tuple4 z s p a ➔
      [s' : {l ≃ lsucc} ➔ View ·R2 t
        = λ eq. [ elimCast -c (s eq).1 , ρ+ (s eq).2 - β{|s eq|} ]]
    - [p' : {l ≃ lpred} ➔ View ·R2 t
        = λ eq. [ elimCast -c (p eq).1 , ρ+ (p eq).2 - β{|p eq|} ]]
    - [ tuple4 z s' p' a , β{|tuple4 z s p a |}]
    } .

import ../gensig ·Label ·SIntPack -monoSIntPack .

SIntCtArgs : ★ ➔ Label ➔ ★ = CtArgs .
SInt : ★ ➔ ★ = Sig .
monoSInt = monoSig .
