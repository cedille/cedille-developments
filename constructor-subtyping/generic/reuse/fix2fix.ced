import ../../lib/lib.
import signature-subtyping .

module generic/reuse/fix2fix (F: ★ ➔ ★) {monoF: Monotonic ·F} (G: ★ ➔ ★) {monoG: Monotonic ·G} {sigsub: SigSub ·F ·G}.

import ../encoding as FixF ·F -monoF .
import ../encoding as FixG ·G -monoG .

-- the least fixpoints of sub-signatures are in a subtype relation notice that
-- no details of the particular fixpoint encoding are needed (this could
-- probably be formalized by making them module parameters)
fix2fix : Cast ·FixF.Ind ·FixG.Ind
= intrCastI
    (FixF.induction ·(λ x: FixF.Ind. ι y: FixG.Ind. { y ≃ x })
       (Λ R. Λ c. λ ih. λ xs.
         [c' : Cast ·R ·FixG.Ind = intrCastI ih]
       - [ FixG.in (elimCast ·(F ·R) -(sigsub -c') xs) , β{ FixG.in xs } ]))
    .
