module view.

import top.
import cast.

View : Π A: ★. Top ➔ ★ = λ A: ★. λ x: Top. ι z: A. {z ≃ x}.

intrView : ∀ A: ★. Π x: Top. ∀ a: A. {a ≃ x} ➾ View ·A x
= Λ A. λ x. Λ a. Λ eq. [ φ eq - a {| x |} , β{| x |} ].

view = intrView.

elimView : ∀ A: ★. Π b: Top. View ·A b ➾ A
= Λ A. λ b. Λ v. φ v.2 - v.1 {| b |}.

retype = elimView.

viewSelf : ∀ A: ★. Π a: A. View ·A β{|a|}
= Λ A. λ a. [ a , β{|a|} ] .

-- internalized realizability
viewFun : ∀ A: ★. ∀ B: ★. Π f: Top. (Π x: A. View ·B β{| f x |}) ➾ View ·(A ➔ B) f
= Λ A. Λ B. λ f. Λ pf.
  intrView ·(A ➔ B) β{| f |} -(λ x. φ (pf x).2 - (pf x).1 {| f x |}) -β.

viewCast : ∀ A: ★. ∀ B: ★. Cast ·A ·B ➾ ∀ x: Top. View ·A x ➔ View ·B x
= Λ A. Λ B. Λ c. Λ x. λ v. ρ ς v.2 - intrView ·B β{|v|} -(cast -c v.1) -β .
