
import top.

module not.

False : ★ = ∀ X: ★. X.
Not : ★ ➔ ★ = λ A: ★. A ➾ False.

explode : ∀ X: ★. False ➔ X = Λ X. λ f. f ·X.

explode' : ∀ X:★. False ➾ Top ➔ X
= Λ X. Λ f. λ t. φ (f·{f ≃ t}) - (f·X) {t}.

falseIrrel : False ➾ False
= Λ b. δ - b ·{λ x. λ y. x ≃ λ x. λ y. y}.

not' : ∀ X: ★. Not ·X ➾ Top ➔ Not ·X
= Λ X. Λ n. λ t. Λ x. explode' -(n -x) t .
